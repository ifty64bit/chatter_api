# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
    push:
        branches: ["master"]

jobs:
    build:
        runs-on: ubuntu-latest
        environment: prod
        strategy:
            matrix:
                node-version: [20.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        steps:
            - name: Deploy using ssh
              env:
                  SSH_PRIVATE_KEY: ${{ secrets.VPS_PRIVATE_KEY }}
                  CLIENT_X509_CERT_URL: ${{ secrets.CLIENT_X509_CERT_URL }}
                  DATABASE_URL: ${{ secrets.DATABASE_URL }}
                  DIRECT_URL: ${{ secrets.DIRECT_URL }}
                  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
                  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
                  PRIVATE_KEY_ID: ${{ secrets.PRIVATE_KEY_ID }}
                  PORT: 1000
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.VPS_HOST }}
                  username: ${{ secrets.VPS_USER }}
                  key: ${{ secrets.VPS_PRIVATE_KEY }}
                  port: 22
                  envs: CLIENT_X509_CERT_URL,DATABASE_URL,DIRECT_URL,GOOGLE_APPLICATION_CREDENTIALS,PRIVATE_KEY,PRIVATE_KEY_ID,PORT
                  script: |
                      APP_NAME=chatter-api
                      export NVM_DIR=~/.nvm
                      source ~/.nvm/nvm.sh
                      cd ~/build_files
                      git pull origin master
                      cd chatter_api
                      > .env
                      touch .env
                      echo "NODE_ENV=production" >> .env
                      echo "PORT=$PORT" >> .env
                      echo "CLIENT_X509_CERT_URL=$CLIENT_X509_CERT_URL" >> .env
                      echo "DATABASE_URL=$DATABASE_URL" >> .env
                      echo "DIRECT_URL=$DIRECT_URL" >> .env
                      echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS" >> .env
                      echo "PRIVATE_KEY=$PRIVATE_KEY" >> .env
                      echo "PRIVATE_KEY_ID=$PRIVATE_KEY_ID" >> .env
                      git status
                      npm i
                      npm run build
                      if pm2 describe $APP_NAME > /dev/null; then
                        echo "App is running. Performing rolling update..."
                        pm2 reload $APP_NAME --update-env
                      else
                        echo "App not found. Starting the app..."
                        pm2 stop $APP_NAME || true
                        pm2 start "npm run start" --name $APP_NAME
                      fi

            # - name: Generate .env
            #   env:
            #       SSH_PRIVATE_KEY: ${{ secrets.VPS_PRIVATE_KEY }}
            #       CLIENT_X509_CERT_URL: ${{ secrets.CLIENT_X509_CERT_URL }}
            #       DATABASE_URL: ${{ secrets.DATABASE_URL }}
            #       DIRECT_URL: ${{ secrets.DIRECT_URL }}
            #       GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
            #       PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
            #       PRIVATE_KEY_ID: ${{ secrets.PRIVATE_KEY_ID }}
            #   run: |
            #       touch .env
            #       echo "NODE_ENV=production" >> .env
            #       echo "PORT=1000" >> .env
            #       echo "CLIENT_X509_CERT_URL=$CLIENT_X509_CERT_URL" >> .env
            #       echo "DATABASE_URL=$DATABASE_URL" >> .env
            #       echo "DIRECT_URL=$DIRECT_URL" >> .env
            #       echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS" >> .env
            #       echo "PRIVATE_KEY=$PRIVATE_KEY" >> .env
            #       echo "PRIVATE_KEY_ID=$PRIVATE_KEY_ID" >> .env

            # - name: Print .env contents
            #   run: cat .env

            # - name: Clean Up node_modules
            #   run: rm -rf node_modules

            # - name: Deploy to Server
            #   env:
            #       SSH_PRIVATE_KEY: ${{ secrets.VPS_PRIVATE_KEY }}
            #   run: |
            #       echo "$SSH_PRIVATE_KEY" > /tmp/private_key
            #       chmod 600 /tmp/private_key
            #       rsync -avz -e "ssh -i /tmp/private_key -o StrictHostKeyChecking=no" ./ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/ifty/build_files/chatter-api
            # - name: Install Production Dependencies on VPS
            #   env:
            #       SSH_PRIVATE_KEY: ${{ secrets.VPS_PRIVATE_KEY }}
            #   run: |
            #       ssh -i /tmp/private_key -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} 'cd /home/ifty/build_files/chatter-api &&export NVM_DIR=~/.nvm && source ~/.nvm/nvm.sh && npm ci --omit=dev && ls && ls ./build'
