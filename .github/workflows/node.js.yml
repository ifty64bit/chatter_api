# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v4
    - run: ls
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install NPM Deps
      run: npm install
    - name: Generate .env
      run: npm run build --if-present
    - name: Create remote directory
      env:
        SSH_PRIVATE_KEY: ${{ secrets.VPS_PRIVATE_KEY }}
      run: |
          echo "$SSH_PRIVATE_KEY" > /tmp/private_key
          chmod 600 /tmp/private_key
          ssh -i /tmp/private_key -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p /home/${{ secrets.VPS_USER }}/build_files/chatter-api"
    - name: Deploy to VPS
      env:
        SSH_PRIVATE_KEY: ${{ secrets.VPS_PRIVATE_KEY }}
      run: |
          echo "$SSH_PRIVATE_KEY" > /tmp/private_key
          chmod 600 /tmp/private_key
          rsync -avz -e "ssh -i /tmp/private_key -o StrictHostKeyChecking=no" ./build/ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/ifty/build_files/chatter-api
    - name: Run Application
      env:
        SSH_PRIVATE_KEY: ${{ secrets.VPS_PRIVATE_KEY }}
        CLIENT_X509_CERT_URL: ${{ secrets.CLIENT_X509_CERT_URL }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DIRECT_URL: ${{ secrets.DIRECT_URL }}
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        PRIVATE_KEY_ID: ${{ secrets.PRIVATE_KEY_ID }}
      run: |
          echo "$SSH_PRIVATE_KEY" > /tmp/private_key
          chmod 600 /tmp/private_key
          ssh -i /tmp/private_key -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
          cd /home/${{ secrets.VPS_USER }}/build_files/chatter-api && \
          ls && \
          NODE_ENV=production \
          PORT=1000 \
          DB_URL=${{ secrets.DB_URL }} \
          API_KEY=${{ secrets.API_KEY }} \
          CLIENT_X509_CERT_URL=$CLIENT_X509_CERT_URL \
          DATABASE_URL=$DATABASE_URL \
          DIRECT_URL=$DIRECT_URL \
          GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS \
          PRIVATE_KEY=$PRIVATE_KEY \
          PRIVATE_KEY_ID=$PRIVATE_KEY_ID \
          pm2 start "npm run start" --name chatter-api || pm2 restart chatter-api
          "
